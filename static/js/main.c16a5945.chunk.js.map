{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setTypeSort","isSortedDescending","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","currentState","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAqBF,IAAaP,EAASM,OAASF,EACpDM,EA9BD,SACLA,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKd,EAASiB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EAOOS,CAAkBnB,EAAiB,CAAEM,WAAUH,eAE7D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYhB,IAAaP,EAASe,WAEpCS,QAAS,kBAAMhB,EAAYR,EAASe,WALtC,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYhB,IAAaP,EAASiB,SAEpCO,QAAS,kBAAMhB,EAAYR,EAASiB,SALtC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAfnB,IAEdoB,QAAS,kBAAMnB,GAAW,SAAAoB,GAAY,OAAKA,MAL7C,sBAUEhB,GACA,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAYR,EAASM,MACrBD,GAAW,IALf,sBAaJ,6BACGK,EAAMgB,KAAI,SAAAC,GACT,OAAO,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3G1BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c16a5945.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setTypeSort] = useState(SortType.NONE);\n  const isSortedDescending = sortType === SortType.NONE && !isReversed;\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => setTypeSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => setTypeSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': isReversed === false,\n          })}\n          onClick={() => setReverse(currentState => !currentState)}\n        >\n          Reverse\n        </button>\n\n        {!isSortedDescending && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setTypeSort(SortType.NONE);\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => {\n          return <li key={good} data-cy=\"Good\">{good}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}